oauth_endpoints("github")
myapp <- oauth_app ("github", key = "689284ec2b3bc22fa2c7", secret = "e1c410994e4cae512f8a082528bad2f0194ea514")
myapp
github_token <- oauth2.0_token (oauth_endpoints("github"), myapp)
req <- GET ("https://api.github.com/users/jtleek/repos", config (token = github_token))
req <- GET ("https://api.github.com/users/jtleek/repos", config (token = oauth2.0_token (oauth_endpoints("github"), myapp)))
install.pacakges("httpuv")
install.packages("httpuv")
install.packages("httpuv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv ", destfile = "acs")
library(sqldf)
?read.csv.sql
acs <- read.csv.sql (https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv ")
acs <- read.csv.sql ("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv ")
acs <- read.csv.sql ("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
?nchar()
url <- "http://biostat.jhsph.edu/~jleek/contact.html "
htmlCode <- readLines(url)
htmlCode
nchar(htmlCode)
con <- url ("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode <- readLines(con)
htmlCode
nchar(htmlCode)
url <- "https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=1&cad=rja&uact=8&ved=0CB0QFjAA&url=http%3A%2F%2Fscholar.google.com%2Fcitations%3Fuser%3DHI-I6C0AAAAJ&ei=OqGbU-amKse98gHeiIDADw&usg=AFQjCNEhcqC-Etn9i_LsnT79JGHhMB0n-Q&sig2=Z42DyWBtk8P-hEKzmCh5xw&bvm=bv.68911936,d.b2U"
con <- irl ("https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=1&cad=rja&uact=8&ved=0CB0QFjAA&url=http%3A%2F%2Fscholar.google.com%2Fcitations%3Fuser%3DHI-I6C0AAAAJ&ei=OqGbU-amKse98gHeiIDADw&usg=AFQjCNEhcqC-Etn9i_LsnT79JGHhMB0n-Q&sig2=Z42DyWBtk8P-hEKzmCh5xw&bvm=bv.68911936,d.b2U")
con <- url ("https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=1&cad=rja&uact=8&ved=0CB0QFjAA&url=http%3A%2F%2Fscholar.google.com%2Fcitations%3Fuser%3DHI-I6C0AAAAJ&ei=OqGbU-amKse98gHeiIDADw&usg=AFQjCNEhcqC-Etn9i_LsnT79JGHhMB0n-Q&sig2=Z42DyWBtk8P-hEKzmCh5xw&bvm=bv.68911936,d.b2U")
htmlCode <- readLines(con)
con <- url ("http://scholar.google.com/citations?user=HI-I6C0AAAAJ")
htmlCode <- readLines(con)
htmlCode
nchar(htmlCode)
url <- "http://scholar.google.com/citations?user=HI-I6C0AAAAJ"
html <- htmlParseTree(url, useInternalNodes = T)
library(XML)
html <- htmlParseTree(url, useInternalNodes = T)
library(XML)
html <- htmlParseTree(url, useInternalNodes = T)
html <- htmlTreeParse(url, useInternalNodes = T)
html
url <- "http://biostat.jhsph.edu/~jleek/contact.html"
htmlCode <- htmlTreeParse(url, useInternalNodes = F)
htmlCode
htmlCode <- htmlTreeParse(url, useInternalNodes = T)
htmlCode
?htmlTreeParse
nchar(htmlCoded)
nchar(htmlCode)
nchar(html)
?externalptr
con <- url ("http://scholar.google.com/citations?user=HI-I6C0AAAAJ")
htmlCode <- readLines (con)
con <- url ("http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en")
htmlCode <- readLines (con)
close(con)
htmlCode
gc(verbose = T)
gc()
getwd()
ls()
rm(list = ls())
gc(verbose = T)
list.files()
NEI <- readRDS("summarySCC_PM25.rds")
library(ggplot2)
qplot (year, Emissions, data = NEI, facets = .~type)
set.seed(1234)
par(mar = c(0,0,0,0))
x <- rnorm (12, mean = rep(1:3, each = 4), sd = 0.2)
y <- rnorm (12, mean = rep(1:3,each = c(1,2,1)), sd = 0.2)
y <- rnorm (12, mean = rep(c(1,2,1),each = 4, sd = 0.2)
)
?cex
plot (x,y,col = "blue")
plot (x,y,col = "blue",cex = 2)
text (x,y,labels = as.character(1:12))
text (x+0.05,y,labels = as.character(1:12))
text (x+0.05,y+0.05,labels = as.character(1:12))
plot (x,y,col = "blue",cex = 2)
text (x+0.05,y+0.05,labels = as.character(1:12))
dataFrame <- data.frame(x=x, y=y)
dist(dataFrame)
?dist
plot (x,y,col = "blue",cex = 2)
text (x+0.05,y+0.05,labels = as.character(1:12))
distXY <- dist(dataFrame)
?hclust
hClustering <- hClush (distXY)
hClustering <- hClust (distXY)
hClustering <- hclust (distXY)
plot (hClustering)
set.seed(1234)
x <- rnorm (12, mean = rep(1:3, each = 4), sd = 0.2)
y <- rnorm (12, mean = rep(c(1,2,1), each = 4), sd = 0.2)
plot (x,y,col = "blue", pch = 19, cex = 2)
text (x+0.09,y+0.09, labels = as.character(1:12))
dataFrame <- data.frame (x= x, y = y)
dist (dataFrame)
distxy <- dist(dataFrame)
hClustering <- hclust (distxy)
plot(hClustering)
kmeansObj <- kmeans (dataFrame, centers = 3)
names(kmeansObj)
kmeansObj$cluster
kmeansObj$centers
plot (x,y,col = kmeansObj$clusters,pch=19,cex=2)
plot (x,y,col = kmeansObj$cluster,pch=19,cex=2)
points (kmeansObj$cluster, pch = 3, cex = 3, lwd = 3)
points (kmeansObj$cluster, pch = 3, cex = 3, lwd = 3, col = 1:3)
kmeansObj$cluster
points (kmeansObj$cluster)
points (kmeansObj$centers, pch = 3, cex = 3, lwd = 3, col = 1:3)
class (kmeansObj$cluster)
class (kmeansObj$centers)
names(hClustering)
?hclust
hClustering$order
plot(hClustering)
dataMatrix
dataFrame
dataFrame[hClustering$order,]
orderedDataFrame <- dataFrame[hClustering$order,]
t(orderedDataFrame)
t(orderedDataFrame)[,nrow(orderedDataFrame):1]
nrow(orderedDataFrame)
plot (rnorm(10), rnorm(10), col = c(1,2,3))
heat.colors()
?topo.colors
?topo.colors(5)
topo.colors(5)
plot(topo.colors(5))
install.packages("grDevices")
install.packages("grDevices")
install.packages("grDevices")
install.packages("grDevices")
install.packages("grDevices")
library(grDevices)
colors()
?colorRamp
gray()
pal <- colorRamp (c("Red", "Blue"))
pal (0)
pal(1)
pal(0.5)
pal <- colorRamp (c("yellow", "pink"))
pal(0)
pal(1)
pal(0.5)
pal (seq(0,1,len = 10))
pal <- colorRampPalette(c("red", "yellow"))
pal(2)
pal(10)
library(RColorBrewer)
cols <- brewer.pal(3,"BuGn")
cols
pal <- colorRampPalette (cols)
image(volcano,col = pal(20))
x <- rnorm (10000)
y <- rnorm(10000)
smoothScatter(x,y)
library(colorspace)
plot (x,y,col = rgb(0,0,0,0.2),pch = 19)
cameraData <- read.csv("https://data.baltimorecity.gov/Transportation/Baltimore-Fixed-Speed-Cameras/dz54-2aru")
getwd()
list.files()
cameraData <- read.csv("Baltimore_Fixed_Speed_Cameras.csv")
names(cameraData)
tolower(names(cameraData))
splitNames <- strsplit (names(cameraData), "\\.")
splitNames[[5]]
splitNames[[6]]
splitNames[[6]][[1]]
sapply (splitNames, firstElement(x){x[1]})
sapply (splitNames, firstElement(x) x[1])
sapply (splitNames, firstElement(x) (x[1])
)
sapply (splitNames, firstElement <- function(x) {x[1]}
)
library(stringr)
paste0 ("Shonu", "Jaan")
d1 = date()
d1
class(d1)
d2 <- Sys.Date()
class(d2)
d2
format (d2, "%a %b %d")
class(format (d2, "%a %b %d"))
x <- c("1jan1960", "2jan1960", "10jan1985", "17aug1985")
as.Date (x, "%d%b%Y")
z <- as.Date (x, "%d%b%Y")
len(z)
length(z)
z[4] - z[3]
x <- c("1jan1960", "2jan1960", "10apr1985", "17aug1985")
z <- as.Date (x, "%d%b%Y")
z[4] - z[3]
x <- c("1jan1960", "2jan1960", "10apr1985", "17aug1984")
z <- as.Date (x, "%d%b%Y")
z[4] - z[3]
weekdays(d2)
months(d2)
julian (d2)
library(lubridate)
install.packages("lubridate")
library(lubridate)
ymd("20130108")
mdy ("08/04/2013")
dmy ("03-04-2014")
ymd_hms("2011-08-03 10:15:04")
ymd_hms ("2011-07-08 10:14:03", tz = "Pacific/Auckland")
?Sys.timezone
x <- c("1jan1960", "2jan1960", "10apr1985", "17aug1984")
y <- dmy (x)
y
wday(y[1])
wday(y[1], label = T)
wday(y[3], label = T)
wday(y[4], label = T)
install.packages("xtable")
setwd("~/Personal/Coursera/ReproducibleResearch/Workspace")
source('~/Personal/Coursera/ReproducibleResearch/Workspace/PeerAssessment1-ReproducibleResearch.R')
source('~/Personal/Coursera/ReproducibleResearch/Workspace/PeerAssessment1-ReproducibleResearch.R')
list.files("./PeerAssessment1")
head(activityMonitor)
activityMonitor <- read.csv ("./PeerAssessment1/activity.csv")
head(activityMonitor)
nrow(activityMonitor)
?average
?mean
stepsMean <- aggregate (steps~date, data = activityMonitor, mean)
nrow(stepsMean)
head(stepsMean)
stepsMean <- aggregate (steps~date, data = activityMonitor, mean, na.rm = TRUE)
stepsMean
activityMonitor <- complete.cases(activityMonitor)
nrow(activityMonitor)
activityMonitor <- read.csv ("./PeerAssessment1/activity.csv")
nrow(activityMonitor)
activityMonitor[complete.cases(activityMonitor),]
source('~/Personal/Coursera/ReproducibleResearch/Workspace/PeerAssessment1-ReproducibleResearch.R')
stepsMean
stepsMedian
nrow(activityMonitor)
?hist
hist (activityMonitor)
hist (activityMonitor$steps)
mean (acitivityMonitor$steps)
mean (activityMonitor$steps)
median (activityMonitor$steps)
nrow(activityMonitor)
names(activityMonitor)
stepsAvg <- aggregate (steps~date + interval, data = activityMonitor, mean)
stepsAvg
head(stepsAvg)
?plot
stepsAvg <- aggregate (steps~interval, data = activityMonitor, mean)
head(stepsAvg)
plot (stepsAvg$interval, stepsAvg$steps, type = "l")
subset (stepsAvg, steps == max(steps))
source('~/Personal/Coursera/ReproducibleResearch/Workspace/PeerAssessment1-ReproducibleResearch.R')
source('~/Personal/Coursera/ReproducibleResearch/Workspace/PeerAssessment1-ReproducibleResearch.R')
nrow (activityMonitor)
nrow (activityMonitorMissing)
activityMonitorMissing <- subset (activityMonitor, interval == NA)
nrow (activityMonitorMissing)
head (activityMonitorMissing)
head(activityMonitor)
source('~/Personal/Coursera/ReproducibleResearch/Workspace/PeerAssessment1-ReproducibleResearch.R')
missingRows
activityMonitor[is.na(activitMonitor)]
activityMonitor[is.na(activityMonitor)]
activityMonitor[is.na(activityMonitor),]
source('~/Personal/Coursera/ReproducibleResearch/Workspace/PeerAssessment1-ReproducibleResearch.R')
missingRows
head(activityMonitorMissing)
activityMonitor$steps[is.na(activityMonitor$steps)] <- mean (activityMonitor$steps)
activityMonitor[is.na(activityMonitor),]
activityMonitor$steps[is.na(activityMonitor$steps)] <- mean (activityMonitor$steps)
head(activityMonitor$steps)
activityMonitor$steps[is.na(activityMonitor$steps)] <- mean (activityMonitor$steps, na.rm = TRUE)
head(activityMonitor$steps)
?aggregate
activityMonitor <- read.csv ("./PeerAssessment1/activity.csv")
activityMonitorMissing <- activityMonitor[is.na(activityMonitor),]
missingRows <- nrow (activityMonitorMissing)
activityMonitor$steps[is.na(activityMonitor$steps)] <- aggregate (steps~interval, + date, data = activityMonitor,
mean, na.rm = TRUE)
activityMonitor$steps[is.na(activityMonitor$steps)] <- aggregate (steps~interval + date, data = activityMonitor,
mean, na.rm = TRUE)
head(activityMonitor)
?mean
source('~/Personal/Coursera/ReproducibleResearch/Workspace/PeerAssessment1-ReproducibleResearch.R')
head(activityMonitor)
activityMonitor <- read.csv ("./PeerAssessment1/activity.csv")
activityMonitor$steps[is.na(activityMonitor$steps)] <- apply (activityMonitor$steps, colMeans,na.rm = TRUE)
activityMonitor$steps[is.na(activityMonitor$steps)] <- lapply (activityMonitor$steps, colMeans,na.rm = TRUE)
head(activityMonitor)
mean (activityMonitor$steps, by = activityMonitor$interval)
mean (activityMonitor$steps, by = activityMonitor$interval, na.rm = TRUE)
aggregate (steps~interval, mean, na.rm = TRUE)
aggregate (steps~interval, data = activityMonitor, mean, na.rm = TRUE)
activityMonitor$steps[is.na(activityMonitor$steps)] <- aggregate (steps~interval, data = activityMonitor,
mean, na.rm = TRUE)
head(activityMonitor)
source('~/Personal/Coursera/ReproducibleResearch/Workspace/PeerAssessment1-ReproducibleResearch.R')
activityMonitor <- read.csv ("./PeerAssessment1/activity.csv")
activityMonitor$steps[is.na(activityMonitor$steps)] <- mean(activityMonitor$steps, na.rm = TRUE)
head(activityMonitor)
hist (activityMonitor$steps)
stepsMean <- mean (activityMonitor$steps)
stepsMedian <- median (activityMonitor$steps)
hist (activityMonitor$steps, main = "Total Number of steps taken each day", xlab = "Number of steps",
ylab = "Frequency")
stepsMean
stepsMedian
weekends(activityMonitor$date)
weekend(activityMonitor$date)
weekdays(activityMonitor$date)
class(activityMonitor$date)
activityMonitorNew <- transform (activityMonitor, date = as.date (date, format = "%m/%d/%Y"))
activityMonitorNew <- transform (activityMonitor, date = as.Date (date, format = "%m/%d/%Y"))
head(activityMonitorNew)
mydate <- factor ("2012-10-01")
as.Date (mydate, format ="%m/%d/%Y" )
mydate <- factor ("2012-10-01")
as.Date (mydate, format ="%Y/%d/%m" )
mydate <- factor("1/15/2006 0:00:00")
as.Date(mydate, format = "%m/%d/%Y")
mydate <- factor("1/15/2006")
as.Date(mydate, format = "%m/%d/%Y")
mydate <- factor ("2012-10-01")
as.Date(mydate, format = "%m-%d-%Y")
mydate
as.Date(mydate, format = "%Y-%d-%m")
head(activityMonitor)
activityMonitorNew <- transform (activityMonitor, date = as.Date (date, format = "%Y-%m-%d"))
head(activityMonitorNew)
class(activityMonitorNew$date)
?weekdays
?weekend
?weekends
weekdays(activityMonitorNew$date, abbreviate = TRUE)
activityMonitorNew <- transform (activityMonitorNew, weekdayend = weekdays(activityMonitorNeW$date))
activityMonitorNew <- transform (activityMonitorNew, weekdayend = weekdays(activityMonitorNew$date))
head(activityMonitorNew)
activityMonitorNew <- transform (activityMonitorNew, weekdayend = weekdays(activityMonitorNew$date, abbreviate = TRUE))
head(activityMonitorNew)
?grep
gsub (paste ("Sat", "Sun", collapse = "|"), activityMonitorNew$weekdayend, activityMonitorNew)
paste ("Sat", "Sun", collapse = "|")
activityMonitorNew <- transform (activityMonitor, date = as.Date (date, format = "%Y-%m-%d"))
activityMonitorNew <- transform (activityMonitorNew, weekdayend = weekdays(activityMonitorNew$date, abbreviate = TRUE))
gsub ("Sat", activityMonitor$weekdayend)
gsub ("Sat", activityMonitor$weekdayend)
gsub ("Sat", "weekend",x = activityMonitor$weekdayend)
grep ("Sat", x = activityMonitorNew$weekdayend, fixed = FALSE, value = TRUE)
gsub ("Sat", "Weekend", x = activityMonitorNew$weekdayend, fixed = FALSE, value = TRUE)
gsub ("Sat", "Weekend", x = activityMonitorNew$weekdayend, fixed = FALSE)
activityMonitorNew [activityMonitor == "Sun"] <- "Weekend"
head(activityMonitorNew)
head(activityMonitor[,4])
head(activityMonitorNew[,4])
head(activityMonitorNew[,4]activityMonitorNew[,4]=="Sun")
head(activityMonitorNew[,4][activityMonitorNew[,4]=="Sun"])
head(activityMonitorNew[,4][activityMonitorNew[,4]=="Sun"] <- "Weekend")
activityMonitorNew[complete.cases(ActivityMonitorNew)]
activityMonitorNew[complete.cases(activityMonitorNew)]
activityMonitorNew[complete.cases(activityMonitorNew),]
activityMonitorNew <- transform (activityMonitor, date = as.Date (date, format = "%Y-%m-%d"))
activityMonitorNew <- transform (activityMonitorNew, weekdayend = weekdays(activityMonitorNew$date, abbreviate = TRUE))
gsub ("Sat", "Weekend", x = activityMonitorNew$weekdayend, fixed = FALSE)
activityMonitorNew <- gsub ("Sat", "Weekend", x = activityMonitorNew$weekdayend, fixed = FALSE)
activityMonitorNew <- gsub ("Sun", "Weekend", x = activityMonitorNew$weekdayend, fixed = FALSE)
activityMonitorNew <- gsub ("Sun", "Weekend", x = activityMonitorNew$weekdayend, fixed = FALSE)
gsub ("Sat", "Weekend", x = activityMonitorNew$weekdayend, fixed = FALSE)
activityMonitorNew <- gsub ("Mon", "Weekday", x = activityMonitorNew$weekdayend, fixed = FALSE)
activityMonitorNew <- transform (activityMonitorNew, gsub ("Mon", "Weekday", x = weekdayend, fixed = FALSE))
activityMonitorNew <- transform (activityMonitorNew, gsub ("Mon", "Weekday", x = activityMonitorNew$weekdayend, fixed = FALSE))
head(activityMonitorNew$weekdayend)
activityMonitorNew[,"weekdayend"]
head(activityMonitorNew)
activityMonitorNew <- transform (activityMonitor, date = as.Date (date, format = "%Y-%m-%d"))
activityMonitorNew <- transform (activityMonitorNew, weekdayend = weekdays(activityMonitorNew$date, abbreviate = TRUE))
rep (0:5)
?rep
?weekdays
head(activityMonitorNew)
activityMonitorNew <- transform (activityMonitor, date = as.Date (date, format = "%Y-%m-%d"))
activityMonitorNew <- transform (activityMonitorNew, day = weekdays(activityMonitorNew$date, abbreviate = TRUE))
head(activityMonitorNew)
?cut
activityMonitorNew$weekdayend <- ifelse(activityMonitorNew$day in ("Sat", "Sun"), "Weekend", "Weekday")
activityMonitorNew$weekdayend <- ifelse(activityMonitorNew$day == "Sat" | activityMonitorNew$day == "Sun", "Weekend", "Weekday")
head(activityMonitorNew)
source('~/Personal/Coursera/ReproducibleResearch/Workspace/PeerAssessment1-ReproducibleResearch.R')
xyplot (activityMonitorNew$steps~activityMonitorNew$interval | activityMonitorNew~weekdayend, type = "l")
library(lattice)
xyplot (activityMonitorNew$steps~activityMonitorNew$interval | activityMonitorNew~weekdayend, type = "l")
?xyplot
xyplot (activityMonitorNew$steps~activityMonitorNew$interval | activityMonitorNew~weekdayend,data = activityMonitorNew, type = "l")
attach(mtcars)
head(mtcars)
xyplot (mpg ~ wt | cyl, data = mtcars)
xyplot (steps~interval | weekdayend,data = activityMonitorNew, type = "l")
source('~/Personal/Coursera/ReproducibleResearch/Workspace/PeerAssessment1-ReproducibleResearch.R')
xyplot (steps~interval | weekdayend,data = activityMonitorNew, type = "l")
source('~/Personal/Coursera/ReproducibleResearch/Workspace/PeerAssessment1-ReproducibleResearch.R')
activityMonitorNew <- read.csv ("./PeerAssessment1/activity.csv")
activityMonitorMissing <- activityMonitorNew[is.na(activityMonitor),]
nrow(activityMonitorMissing)
activityMonitorMissing <- activityMonitorNew[is.na(activityMonitorNew),]
nrow(activityMonitorMissing)
activityMonitorNew$steps[is.na(activityMonitor$steps)] <- mean(activityMonitorNew$steps, na.rm = TRUE)
head(activityMonitorNew)
activityMonitorNew$steps[is.na(activityMonitor$steps),] <- mean(activityMonitorNew$steps, na.rm = TRUE)
activityMonitorMissing <- activityMonitorNew[is.na(activityMonitorNew)]
head(activityMonitorNew)
nrow(activityMonitorMissing)
activityMonitorMissing <- activityMonitorNew[!complete.cases(activityMonitorNew)]
activityMonitorMissing <- activityMonitorNew[!complete.cases(activityMonitorNew),]
nrow(activityMonitorMissing)
activityMonitorNew$steps[is.na(activityMonitor$steps)] <- mean(activityMonitorNew$steps, na.rm = TRUE)
head(activityMonitorNew)
mean(activityMonitorNew$steps, na.rm = TRUE)
activityMonitorNew$steps[is.na(activityMonitor$steps)]
activityMonitorNew[is.na(activityMonitor$steps)]
activityMonitorNew[is.na(activityMonitor$steps),]
activityMonitorNew[complete.cases(activityMonitor$steps),]
activityMonitorNew[!complete.cases(activityMonitor$steps),]
activityMonitorNew[is.na(activityMonitorNew),]
activityMonitor$steps[activityMonitorNew[is.na(activityMonitorNew),]]
activityMonitorMissing$steps <- mean (activityMonitorNew$steps, na.rm = TRUE)
head(activityMonitorMissing)
nrow(activityMonitorMissing)
nrow(activityMonitorNew)
activityMonitor <- activityMonitor[complete.cases(activityMonitor)]
activityMonitor <- activityMonitor[complete.cases(activityMonitor),]
nrow(activityMonitor)
activityMonitor <- activityMonitorNew[complete.cases(activityMonitor),]
nrow(activityMonitor)
activityMonitorNew <- read.csv ("./PeerAssessment1/activity.csv")
activityMonitorMissing <- activityMonitorNew[is.na(activityMonitorNew),]
missingRows <- nrow (activityMonitorMissing)
print (missingRows)
activityMonitorMissing$steps <- mean(activityMonitorNew$steps, na.rm = TRUE)
activityMonitor <- activityMonitor[complete.cases(activityMonitor),]
nrow(activityMonitor)
nrow(activityMonitorMissing)
nrow(activityMonitorNew)
activityMonitorNew <- rbind(activityMonitorMissing, activityMonitor)
nrow(activityMonitorNew)
newStepsMean <- mean (activityMonitorNew$steps)
print (newStepsMean)
newStepsMedian <- median (activityMonitorNew$steps)
print (newStepsMedian)
activityMonitorNew <- transform (activityMonitor, date = as.Date (date, format = "%Y-%m-%d"))
activityMonitorNew <- transform (activityMonitorNew, date = as.Date (date, format = "%Y-%m-%d"))
head(activityMonitorNew)
nrow(activityMonitorNew)
activityMonitorNew <- read.csv ("./PeerAssessment1/activity.csv")
activityMonitorMissing <- activityMonitorNew[is.na(activityMonitorNew),]
missingRows <- nrow (activityMonitorMissing)
print (missingRows)
activityMonitorMissing$steps <- mean(activityMonitorNew$steps, na.rm = TRUE)
activityMonitor <- activityMonitor[complete.cases(activityMonitor),]
activityMonitorNew <- rbind(activityMonitorMissing, activityMonitor)
newStepsMean <- mean (activityMonitorNew$steps)
print (newStepsMean)
newStepsMedian <- median (activityMonitorNew$steps)
print (newStepsMedian)
nrow(activityMonitorNew)
activityMonitorNew <- transform (activityMonitorNew, date = as.Date (date, format = "%Y-%m-%d"))
activityMonitorNew <- transform (activityMonitorNew, day = weekdays(activityMonitorNew$date, abbreviate = TRUE))
activityMonitorNew$weekdayend <- ifelse(activityMonitorNew$day == "Sat" | activityMonitorNew$day == "Sun",
"Weekend", "Weekday")
head(activityMonitorNew)
nrow(activityMonitorNew)
activityMonitorNew$averageSteps <- aggregate (steps~interval+weekdayend, mean)
?aggregate
activityMonitorNew$averageSteps <- aggregate (steps~interval+weekdayend,data = activityMonitorNew, FUN= mean)
avgActivityMonitor$avgSteps <- aggregate (steps~interval+weekdayend,data = activityMonitorNew, FUN= mean)
require(reshape2)
library(reshape2)
aggregate (steps~interval+weekdayend, data = activityMonitorNew, mean)
activityMonitorAvg <- aggregate (steps~interval+weekdayend, data = activityMonitorNew, mean)
head(activityMonitorAvg)
xyplot (steps~interval | weekdayend,data = activityMonitorAvg, type = "l")
activityMonitor <- read.csv ("./PeerAssessment1/activity.csv")
setwd("~/Personal/Coursera/ReproducibleResearch/Workspace/PeerAssessment1")
library(knitr)
library(markdown)
knit ("PA1_Template.Rmd")
markdownToHTML("PA1_Template.md", "PA1_Template.html")
knit ("PA1_Template.Rmd")
getwd()
setwd("~/Personal/Coursera/ReproducibleResearch/Workspace")
knit ("PA1_Template.Rmd")
markdownToHTML("PA1_Template.md", "PA1_Template.html")
fileURL <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(fileURL, dest = "./PeerAssessment1/Data.zip", method = "curl")
unzip ("./PeerAssessment1/Data.zip", exdir = "./PeerAssessment1")
list.files("./PeerAssessment1")
unzip ("./PeerAssessment1/Data.zip", exdir = "./PeerAssessment1")
getwd()
download.file(fileURL, dest = "./PeerAssessment1/Data.zip")
unzip ("./PeerAssessment1/Data.zip", exdir = "./PeerAssessment1")
list.files("./PeerAssessment1")
activityMonitor <- read.csv ("./PeerAssessment1/activity.csv")
knit ("PA1_Template.Rmd")
knitToHTML ("PA1_Template.md", "PA1_Template.HTML")
markdownToHTML ("PA1_Template.md", "PA1_Template.HTML")
